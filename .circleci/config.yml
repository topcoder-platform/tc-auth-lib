version: 2
defaults: &defaults
    docker:
      - image: cimg/python:3.11.0-browsers
install_dependency: &install_dependency
  name: Installation of build and deployment dependencies.
  command: |
    sudo apt update
    sudo apt install jq python3-pip file
    sudo pip3 install awscli --upgrade
    sudo pip3 install docker-compose
install_deploysuite: &install_deploysuite
  name: Installation of install_deploysuite.
  command: |
    git clone --branch v1.4.14 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
    cp ./../buildscript/master_deploy.sh .
    cp ./../buildscript/buildenv.sh .
    cp ./../buildscript/awsconfiguration.sh .

builddeploy_steps: &builddeploy_steps
      - checkout
      - setup_remote_docker
      - run: *install_dependency
      - run: *install_deploysuite
      - run: 
          name: Running build script.
          command: |
            ./awsconfiguration.sh $DEPLOY_ENV
            source awsenvconf
            ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-buildvar
            source buildenvvar          
            ./build.sh
            ./buildstatic.sh
      - deploy:
          name: Running MasterScript.
          command: |
            source awsenvconf
            ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-deployvar
            source buildenvvar
            ./master_deploy.sh -d CFRONT -e $DEPLOY_ENV -c true
            ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-static-deployvar
            source buildenvvar
            ./master_deploy.sh -d CFRONT -e $DEPLOY_ENV -c true

jobs:
  # Build & Deploy against development backend
  "build-dev":
    <<: *defaults
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      APPNAME: "tc-auth-lib"    
    steps: *builddeploy_steps

  "build-prod":
    <<: *defaults
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"    
      APPNAME: "tc-auth-lib"  
    steps: *builddeploy_steps

workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          context : org-global
          filters:
            branches:
              only:
                - dev
                - feature/primary-role
                - account-settings-app

      # Production builds are exectuted only on tagged commits to the
      # master branch.
      - "build-prod":
          context : org-global
          filters:
            branches:
              only: master



